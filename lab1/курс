import numpy as np
import matplotlib.pyplot as plt

# Задаємо параметри рівняння
v = 0.5
omega_p = 1.5

# Задаємо параметри методу
dx = 0.1  # Крок по x
dt = 0.001  # Крок по t
t_max = 0.5  # Максимальний час
x_max = 5.0  # Максимальне значення x

# Задаємо початкові умови
x = np.arange(-x_max, x_max + dx, dx)
t = np.arange(0.0, t_max + dt, dt)
nx = len(x)
nt = len(t)
delta_n = np.zeros((nt, nx))
delta_n[0, :] = np.exp(-x**2)  # Початковий профіль

# Задаємо коефіцієнти рівняння
k1 = dt**2 / dx**2 * 3*v*t**2
k2 = dt**2 / dx**2 * omega_p**2

# Обчислюємо чисельний розв'язок методом скінченних різниць
for i in range(1, nt):
    for j in range(1, nx - 1):
        delta_n[i, j] = 2 * (1 - k1[j]) * delta_n[i - 1, j] - delta_n[i - 2, j] + k2 * delta_n[i - 1, j + 1] + k2 * delta_n[i - 1, j - 1]

# Побудова графіку
X, T = np.meshgrid(x, t)
fig = plt.figure(figsize=(8, 6))
ax = fig.gca(projection='3d')
surf = ax.plot_surface(X, T, delta_n, cmap='coolwarm', linewidth=0, antialiased=False)
ax.set_xlabel('x')
ax.set_ylabel('t')
ax.set_zlabel('delta_n')
ax.set_title('Numerical solution of the differential equation')
plt.show()

